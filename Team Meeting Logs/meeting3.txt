What have you done since the last meeting?
* Finalized database format, completed a database diagram and create.sql
* Implemented transactions database
* Implemented "adding" song feature in UI and API
* Completed university_charts route, which is the core functionality of the app. It can sort songs by timeframe and university of student that likes the song
* We have a score associated with each song's popularity at a given university (done by a query in the API)
* Added dummy data to our database for demonstration/testing purposes (includes: songs, university, users, transaction(multiple per song))
* profile page front-end created, will display users: university, username and password once back-end is finished. Option to Edit/Disable account tbd.
* Debugged login and register routes
* Added ability to search for songs
* Connected API results to frontend and displayed them in the UI
What are you planning to do until the next meeting?
*create top songs page using data gained from transsactions database
*fix/update password hashing for register and login
*create data trends page and graph
*add option to edit your username/password in profile page
What are the challenges you are facing?
*login and register page not working although DB has been initilized (hard for testing data aquisition)
*moving project code to an overarching src folder messes with docker, need to resolve that issue
*Timestamp for transactions db needs to have a ton more dummy data
*More routes to access other data tables
* Implement displaying the top songs for the universities
* User session and dynamic navbar
* Formatted data/analytics graphs, next step is to display database data on these graphs
